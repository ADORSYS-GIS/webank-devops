name: Terraform Deployment

on:
  # Enable manual trigger only
  workflow_dispatch:
  push:
    branches:
      - '*'

defaults:
  run:
    working-directory: ./terraform

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: ${{ matrix.env }}
    strategy:
      matrix:
        env: [dev, prod]
        include:
          - env: dev
            DB_USERNAME: ${{ secrets.DB_USERNAME_DEV }}
          - env: prod
            DB_USERNAME: ${{ secrets.DB_USERNAME_PROD }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.8

      - name: Install tfsec
        run: |
          curl -s https://raw.githubusercontent.com/aquasecurity/tfsec/main/scripts/install.sh | bash

      - name: Run tfsec
        run: |
          tfsec .

      - name: Install tflint
        run: |
          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install.sh | bash

      - name: Run tflint
        run: |
          tflint --init
          tflint

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Set DB Password and Username as Environment Variables
        run: |
          echo "TF_VAR_db_password=${{ secrets.db_password }}" >> $GITHUB_ENV
          echo "TF_VAR_db_username=${{ matrix.DB_USERNAME }}" >> $GITHUB_ENV

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -out=plan.tfplan

      - name: Terraform Apply
        if: github.event_name == 'workflow_dispatch'
        run: terraform apply -auto-approve plan.tfplan